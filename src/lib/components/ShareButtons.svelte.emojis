<!-- ShareButtons.svelte -->
<script>
  import { onMount } from 'svelte';
  import { browser } from '$app/environment';
  
  export let title = '';
  export let description = '';
  export let url = '';
  export let hashtags = '';
  export let position = 'left'; // 'left' | 'right'
  export let showLabels = false;
  export let compact = false;
  
  let currentUrl = '';
  let pageTitle = '';
  let pageDescription = '';
  let showTooltip = '';
  let copied = false;
  
  onMount(() => {
    if (browser) {
      currentUrl = url || window.location.href;
      pageTitle = title || document.title || 'Global Governance Framework';
      pageDescription = description || document.querySelector('meta[name="description"]')?.content || 'Discover your path to planetary citizenship and connect your daily choices to global transformation';
    }
  });
  
  // Platform sharing functions
  function shareOnTwitter() {
    const tweetText = `${pageTitle}\n\n${pageDescription}`;
    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(tweetText)}&url=${encodeURIComponent(currentUrl)}${hashtags ? `&hashtags=${encodeURIComponent(hashtags)}` : ''}`;
    window.open(twitterUrl, '_blank', 'width=600,height=400');
  }
  
  function shareOnBluesky() {
    const blueskyText = `${pageTitle}\n\n${pageDescription}\n\n${currentUrl}`;
    const blueskyUrl = `https://bsky.app/intent/compose?text=${encodeURIComponent(blueskyText)}`;
    window.open(blueskyUrl, '_blank', 'width=600,height=600');
  }
  
  function shareOnLinkedIn() {
    const linkedinUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(currentUrl)}`;
    window.open(linkedinUrl, '_blank', 'width=600,height=500');
  }
  
  function shareOnFacebook() {
    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(currentUrl)}`;
    window.open(facebookUrl, '_blank', 'width=600,height=400');
  }
  
  function shareOnReddit() {
    const redditUrl = `https://reddit.com/submit?url=${encodeURIComponent(currentUrl)}&title=${encodeURIComponent(pageTitle)}`;
    window.open(redditUrl, '_blank', 'width=700,height=500');
  }
  
  function shareViaEmail() {
    const subject = encodeURIComponent(pageTitle);
    const body = encodeURIComponent(`I thought you might find this interesting:\n\n${pageTitle}\n\n${pageDescription}\n\n${currentUrl}`);
    window.location.href = `mailto:?subject=${subject}&body=${body}`;
  }
  
  async function copyToClipboard() {
    try {
      await navigator.clipboard.writeText(currentUrl);
      copied = true;
      setTimeout(() => {
        copied = false;
      }, 2000);
    } catch (err) {
      console.error('Failed to copy:', err);
      // Fallback for older browsers
      const textArea = document.createElement('textarea');
      textArea.value = currentUrl;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      copied = true;
      setTimeout(() => {
        copied = false;
      }, 2000);
    }
  }
  
  // Native Web Share API
  async function shareNative() {
    if (navigator.share) {
      try {
        await navigator.share({
          title: pageTitle,
          text: pageDescription,
          url: currentUrl,
        });
      } catch (err) {
        console.log('Error sharing:', err);
      }
    }
  }
  
  function showTooltipFor(platform) {
    showTooltip = platform;
  }
  
  function hideTooltip() {
    showTooltip = '';
  }
  
  // Check if native sharing is available
  $: hasNativeShare = browser && navigator.share;
</script>

<div class="share-buttons" class:right={position === 'right'} class:compact>
  <div class="share-container">
    <!-- Header -->
    <div class="share-header">
      {#if !compact}
        <div class="share-icon">üîó</div>
        <span class="share-label">Share</span>
      {:else}
        <div class="share-icon-compact">üì§</div>
      {/if}
    </div>
    
    <!-- Share Options -->
    <div class="share-options">
      <!-- Native Share (mobile) -->
      {#if hasNativeShare}
        <button 
          class="share-button native"
          on:click={shareNative}
          on:mouseenter={() => showTooltipFor('native')}
          on:mouseleave={hideTooltip}
          aria-label="Share via device"
        >
          <span class="icon">üì±</span>
          {#if showLabels}<span class="label">Share</span>{/if}
          {#if showTooltip === 'native'}
            <div class="tooltip">Share via device</div>
          {/if}
        </button>
      {/if}
      
      <!-- Twitter/X -->
      <button 
        class="share-button twitter"
        on:click={shareOnTwitter}
        on:mouseenter={() => showTooltipFor('twitter')}
        on:mouseleave={hideTooltip}
        aria-label="Share on X (Twitter)"
      >
        <span class="icon">ùïè</span>
        {#if showLabels}<span class="label">X</span>{/if}
        {#if showTooltip === 'twitter'}
          <div class="tooltip">Share on X</div>
        {/if}
      </button>
      
      <!-- Bluesky -->
      <button 
        class="share-button bluesky"
        on:click={shareOnBluesky}
        on:mouseenter={() => showTooltipFor('bluesky')}
        on:mouseleave={hideTooltip}
        aria-label="Share on Bluesky"
      >
        <span class="icon">ü¶ã</span>
        {#if showLabels}<span class="label">Bluesky</span>{/if}
        {#if showTooltip === 'bluesky'}
          <div class="tooltip">Share on Bluesky</div>
        {/if}
      </button>
      
      <!-- LinkedIn -->
      <button 
        class="share-button linkedin"
        on:click={shareOnLinkedIn}
        on:mouseenter={() => showTooltipFor('linkedin')}
        on:mouseleave={hideTooltip}
        aria-label="Share on LinkedIn"
      >
        <span class="icon">üíº</span>
        {#if showLabels}<span class="label">LinkedIn</span>{/if}
        {#if showTooltip === 'linkedin'}
          <div class="tooltip">Share on LinkedIn</div>
        {/if}
      </button>
      
      <!-- Facebook -->
      <button 
        class="share-button facebook"
        on:click={shareOnFacebook}
        on:mouseenter={() => showTooltipFor('facebook')}
        on:mouseleave={hideTooltip}
        aria-label="Share on Facebook"
      >
        <span class="icon">üë•</span>
        {#if showLabels}<span class="label">Facebook</span>{/if}
        {#if showTooltip === 'facebook'}
          <div class="tooltip">Share on Facebook</div>
        {/if}
      </button>
      
      <!-- Reddit -->
      <button 
        class="share-button reddit"
        on:click={shareOnReddit}
        on:mouseenter={() => showTooltipFor('reddit')}
        on:mouseleave={hideTooltip}
        aria-label="Share on Reddit"
      >
        <span class="icon">ü§ñ</span>
        {#if showLabels}<span class="label">Reddit</span>{/if}
        {#if showTooltip === 'reddit'}
          <div class="tooltip">Share on Reddit</div>
        {/if}
      </button>
      
      <!-- Email -->
      <button 
        class="share-button email"
        on:click={shareViaEmail}
        on:mouseenter={() => showTooltipFor('email')}
        on:mouseleave={hideTooltip}
        aria-label="Share via email"
      >
        <span class="icon">‚úâÔ∏è</span>
        {#if showLabels}<span class="label">Email</span>{/if}
        {#if showTooltip === 'email'}
          <div class="tooltip">Share via email</div>
        {/if}
      </button>
      
      <!-- Copy Link -->
      <button 
        class="share-button copy"
        class:copied
        on:click={copyToClipboard}
        on:mouseenter={() => showTooltipFor('copy')}
        on:mouseleave={hideTooltip}
        aria-label="Copy link"
      >
        <span class="icon">{copied ? '‚úÖ' : 'üìã'}</span>
        {#if showLabels}<span class="label">{copied ? 'Copied!' : 'Copy'}</span>{/if}
        {#if showTooltip === 'copy'}
          <div class="tooltip">{copied ? 'Copied!' : 'Copy link'}</div>
        {/if}
      </button>
    </div>
  </div>
</div>

<style>
  .share-buttons {
    position: fixed;
    top: 50%;
    left: 20px;
    transform: translateY(-50%);
    z-index: 1000;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }
  
  .share-buttons.right {
    left: auto;
    right: 20px;
  }
  
  .share-container {
    background: white;
    border-radius: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    padding: 1rem;
    transition: all 0.3s ease;
  }
  
  .share-container:hover {
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.18);
    transform: scale(1.02);
  }
  
  .compact .share-container {
    padding: 0.5rem;
  }
  
  .share-header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid #E5E7EB;
  }
  
  .compact .share-header {
    margin-bottom: 0.5rem;
    padding-bottom: 0.5rem;
    justify-content: center;
  }
  
  .share-icon {
    font-size: 1.25rem;
  }
  
  .share-icon-compact {
    font-size: 1.1rem;
  }
  
  .share-label {
    font-weight: 600;
    color: #374151;
    font-size: 0.9rem;
  }
  
  .share-options {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .compact .share-options {
    gap: 0.25rem;
  }
  
  .share-button {
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    background: transparent;
    border: 2px solid transparent;
    border-radius: 12px;
    padding: 0.75rem;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
    color: inherit;
    font-size: 0.9rem;
    font-weight: 500;
    min-width: 44px;
    min-height: 44px;
    justify-content: flex-start;
  }
  
  .compact .share-button {
    padding: 0.5rem;
    gap: 0.5rem;
    justify-content: center;
  }
  
  .share-button:hover {
    transform: translateX(2px);
    border-color: #E5E7EB;
    background: #F9FAFB;
  }
  
  .share-button.copied {
    background: #ECFDF5;
    border-color: #10B981;
    color: #059669;
  }
  
  .icon {
    font-size: 1.25rem;
    flex-shrink: 0;
    transition: transform 0.2s ease;
  }
  
  .compact .icon {
    font-size: 1.1rem;
  }
  
  .share-button:hover .icon {
    transform: scale(1.1);
  }
  
  .label {
    font-weight: 500;
    color: #374151;
    white-space: nowrap;
  }
  
  /* Platform-specific hover colors */
  .twitter:hover {
    background: #1DA1F2;
    color: white;
    border-color: #1DA1F2;
  }
  
  .bluesky:hover {
    background: #00D4FF;
    color: white;
    border-color: #00D4FF;
  }
  
  .linkedin:hover {
    background: #0077B5;
    color: white;
    border-color: #0077B5;
  }
  
  .facebook:hover {
    background: #1877F2;
    color: white;
    border-color: #1877F2;
  }
  
  .reddit:hover {
    background: #FF4500;
    color: white;
    border-color: #FF4500;
  }
  
  .email:hover {
    background: #7C3AED;
    color: white;
    border-color: #7C3AED;
  }
  
  .copy:hover {
    background: #059669;
    color: white;
    border-color: #059669;
  }
  
  .native:hover {
    background: #6B7280;
    color: white;
    border-color: #6B7280;
  }
  
  /* Tooltips */
  .tooltip {
    position: absolute;
    right: calc(100% + 12px);
    top: 50%;
    transform: translateY(-50%);
    background: #1F2937;
    color: white;
    padding: 0.5rem 0.75rem;
    border-radius: 8px;
    font-size: 0.8rem;
    font-weight: 500;
    white-space: nowrap;
    pointer-events: none;
    opacity: 0;
    animation: tooltipFadeIn 0.2s ease forwards;
    z-index: 1001;
  }
  
  .right .tooltip {
    right: auto;
    left: calc(100% + 12px);
  }
  
  .tooltip::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 100%;
    transform: translateY(-50%);
    border: 5px solid transparent;
    border-left-color: #1F2937;
  }
  
  .right .tooltip::after {
    left: auto;
    right: 100%;
    border-left-color: transparent;
    border-right-color: #1F2937;
  }
  
  @keyframes tooltipFadeIn {
    from {
      opacity: 0;
      transform: translateY(-50%) translateX(-5px);
    }
    to {
      opacity: 1;
      transform: translateY(-50%) translateX(0);
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .share-buttons {
      position: fixed;
      bottom: 20px;
      top: auto;
      left: 50%;
      right: auto;
      transform: translateX(-50%);
    }
    
    .share-container {
      padding: 0.75rem;
    }
    
    .share-options {
      flex-direction: row;
      overflow-x: auto;
      gap: 0.5rem;
      padding-bottom: 0.25rem;
    }
    
    .share-button {
      flex-shrink: 0;
      padding: 0.75rem;
      min-width: 48px;
    }
    
    .label {
      display: none;
    }
    
    .tooltip {
      bottom: calc(100% + 8px);
      top: auto;
      right: 50%;
      left: auto;
      transform: translateX(50%);
    }
    
    .tooltip::after {
      top: 100%;
      left: 50%;
      right: auto;
      transform: translateX(-50%);
      border-top-color: #1F2937;
      border-left-color: transparent;
      border-right-color: transparent;
    }
  }
  
  @media (max-width: 480px) {
    .share-buttons {
      left: 10px;
      right: 10px;
      transform: none;
    }
    
    .share-container {
      width: 100%;
      max-width: none;
    }
    
    .share-options {
      justify-content: space-between;
    }
    
    .share-button {
      flex: 1;
      min-width: 40px;
      padding: 0.6rem;
    }
    
    .icon {
      font-size: 1.1rem;
    }
  }
  
  /* Hide on very small screens or when printing */
  @media (max-width: 320px), print {
    .share-buttons {
      display: none;
    }
  }
  
  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .share-button,
    .share-container,
    .tooltip {
      transition: none;
      animation: none;
    }
    
    .share-button:hover .icon {
      transform: none;
    }
  }
  
  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .share-container {
      border: 2px solid;
      box-shadow: none;
    }
    
    .share-button {
      border: 1px solid;
    }
  }
</style>
